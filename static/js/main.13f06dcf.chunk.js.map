{"version":3,"sources":["site-w.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","Row","Col","lg","src","require","Dropdown","Toggle","variant","id","Menu","icon","faCheck","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13f06dcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/site-w.a6af1039.jpg\";","import React from 'react';\nimport { Row, Col, Dropdown } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport './Sass.scss';\n\nfunction App() {\n  return (\n    <section>\n      <div className=\"section bg-dark\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-lg-6\">\n              <div className=\"who fade\">\n                <h1>Vadim Radermacher</h1>\n                <small>Junior Web Developper</small>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"text-center presentation fade\">\n            <h2>Qui suis-je?</h2>\n            <hr className=\"w-25 my-4 mx-auto bg-darkgrey\"/>\n            <Row>\n              <Col lg={6} className=\"align-self-center\">\n                <p className=\"text-justify\">Je suis un jeune développeur passionné de 24 ans qui a commencé à coder il y a maintenant un an. J'ai suivi une formation en développement web chez Becode.org durant 7 mois avant d'entreprendre un stage de 3 mois dans l'entreprise Webadev où j'ai pu parfaire mes connaissances en développement web, en particulier du côté Front-End</p>\n              </Col>\n              <Col lg={6}>\n                <img src={ require('./site-w.jpg') }></img>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      </div>\n      <div className=\"section bg-light\">\n        <div className=\"container\">\n          <div className=\"text-center presentation fade\">\n              <h2>Hard skills</h2>\n              <hr className=\"w-25 my-4 mx-auto bg-darkgrey\"/>\n            </div>\n          <Row>\n            <Col lg={3}>\n              <Dropdown className=\"dropdown dd-1\">\n                <Dropdown.Toggle variant=\"lightblue\" className=\"w-100\" id=\"dropdown-basic\">\n                  <h2>Bootstrap</h2>\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu className=\"skills\">\n                  <ul className=\"list-unstyled\">\n                    <li className=\"bg-light\">Système de grid <FontAwesomeIcon icon={faCheck} className=\"text-lightblue\"></FontAwesomeIcon></li> \n                    <li>Compréhension de tous les Components <FontAwesomeIcon icon={faCheck} className=\"text-lightblue\"></FontAwesomeIcon></li>\n                    <li className=\"bg-light\">Override des classes <FontAwesomeIcon icon={faCheck} className=\"text-lightblue\"></FontAwesomeIcon></li>\n                  </ul>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n            <Col lg={3}>\n              <Dropdown className=\"dropdown dd-2\">\n                <Dropdown.Toggle variant=\"pink\" className=\"w-100\" id=\"dropdown-basic\">\n                  <h2>Sass</h2>\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu className=\"skills\">\n                  <ul className=\"list-unstyled\">\n                    <li className=\"p-2\" >Variables, mixins<FontAwesomeIcon icon={faCheck} className=\"text-pink pl-1\"></FontAwesomeIcon></li>\n                    <li>Fonctions, maps <FontAwesomeIcon icon={faCheck} className=\"text-pink pl-1\"></FontAwesomeIcon></li>\n                    <li>Extend, include, ... <FontAwesomeIcon icon={faCheck} className=\"text-pink pl-1\"></FontAwesomeIcon></li>\n                  </ul>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n            <Col lg={3}>\n            <Dropdown className=\"dropdown dd-3\">\n                <Dropdown.Toggle variant=\"orange\" className=\"w-100\" id=\"dropdown-basic\">\n                  <h2>HTML</h2>\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"p-2 skills\">\n                  <ul className=\"list-unstyled\">\n                    <li>Connaissance des balises <FontAwesomeIcon icon={faCheck} className=\"text-orange pl-1\"></FontAwesomeIcon></li>\n                    <li>Sémantique <FontAwesomeIcon icon={faCheck} className=\"text-orange pl-1\"></FontAwesomeIcon></li>\n                    <li>Override des classes</li>\n                  </ul>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>\n            <Col lg={3}>\n            <Dropdown className=\"dropdown dd-4\">\n                <Dropdown.Toggle variant=\"darkblue\" className=\"w-100\" id=\"dropdown-basic\">\n                  <h2>CSS</h2>\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu className=\"p-2 skills\">\n                  <ul className=\"list-unstyled\">\n                    <li>Système de grid</li>\n                    <li>Compréhension de tous les Components</li>\n                    <li>Override des classes</li>\n                  </ul>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>   \n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col lg={3}>\n              <Dropdown className=\"dropdown dd-5 my-3\">\n                <Dropdown.Toggle variant=\"warning\" className=\"w-100\" id=\"dropdown-basic\">\n                  <h2>JS</h2>\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu className=\"skills\">\n                  <ul className=\"list-unstyled\">\n                    <li className=\"bg-light\">Système de grid <FontAwesomeIcon icon={faCheck} className=\"text-lightblue\"></FontAwesomeIcon></li> \n                    <li>Compréhension de tous les Components <FontAwesomeIcon icon={faCheck} className=\"text-lightblue\"></FontAwesomeIcon></li>\n                    <li className=\"bg-light\">Override des classes <FontAwesomeIcon icon={faCheck} className=\"text-lightblue\"></FontAwesomeIcon></li>\n                  </ul>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Col>      \n          </Row>\n        </div>\n      </div>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <h2>Soft Skills</h2>\n            <hr className=\"w-25 mx-auto bg-darkgrey\"/>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}